{"type":"operationStart","subtype":"profile","data":{"_id":"1ss0eSbJw8xaqLSw","timestamp":"2023-01-28T21:02:08.092Z","state":"queued","mode":"standard","creationDate":"2023-01-28T21:02:08.095Z","modificationDate":"2023-01-28T21:02:08.095Z","shortid":"Ekmx1TP","$entitySet":"profiles"},"doDiffs":false,"timestamp":1674939728093,"id":"9jnu3q4hacirypw","previousOperationId":null,"operationId":"m1seu84rbm5dvxh"}
{"type":"log","level":"info","message":"Render request 6 queued for execution and waiting for available worker","previousOperationId":"m1seu84rbm5dvxh","timestamp":1674939728094,"id":"r0z1fibsa2ngb6w"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"m1seu84rbm5dvxh","timestamp":1674939728112,"id":"pw7q7jrrjbf5rwt","previousEventId":"9jnu3q4hacirypw","operationId":"pfa7f94vpa746zq"}
{"type":"log","timestamp":1674939728112,"level":"info","message":"Starting rendering request 6","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"p0f10w6xaphqakl","previousOperationId":"pfa7f94vpa746zq"}
{"type":"log","timestamp":1674939728113,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"10b2wzsm9za7jsu","previousOperationId":"pfa7f94vpa746zq"}
{"type":"log","timestamp":1674939728115,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"krsqxka3loxsad9","previousOperationId":"pfa7f94vpa746zq"}
{"type":"log","timestamp":1674939728122,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"l9bhvk96qew33hz","previousOperationId":"pfa7f94vpa746zq"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1674939728168,"id":"o935a4plgjl42k9","previousEventId":"pw7q7jrrjbf5rwt","operationId":"thctj0w1ewfkbuz","previousOperationId":"pfa7f94vpa746zq"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"thctj0w1ewfkbuz","timestamp":1674939728169,"id":"wq6r6pzwxjtq8az","previousEventId":"o935a4plgjl42k9","operationId":"5mggsfjjs4ohpbx"}
{"type":"log","timestamp":1674939728176,"level":"warn","message":"Error when processing render request 6\n(because) error when evaluating custom script /samples/Orders/orders-script\nProtocol \"https:\" not supported. Expected \"http:\"\n\n(sandbox.js line 7:14)\n\n   5 | function fetchOrders() {\n   6 |     return new Promise((resolve, reject) => {\n>  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n     |              ^\n   8 |         (result) => {\n   9 |             var str = '';\n  10 |             result.on('data', (b) => str += b);\n\n(sandbox.js line 6:12)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |     return new Promise((resolve, reject) => {\n    |            ^\n  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n  8 |         (result) => {\n  9 |             var str = '';\n\n(sandbox.js line 19:26)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     const orders = await fetchOrders()\n     |                          ^\n  20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n\n(sandbox.js line 52:29)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  53 | }\n\n\nTypeError [ERR_INVALID_PROTOCOL]: Protocol \"https:\" not supported. Expected \"http:\"\n    at new NodeError (node:internal/errors:371:5)\n    at new ClientRequest (node:_http_client:158:11)\n    at request (node:http:96:10)\n    at Object.get (node:http:107:15)\n    at sandbox.js:7:14\n    at new Promise (<anonymous>)\n    at fetchOrders (sandbox.js:6:12)\n    at prepareDataSource (sandbox.js:19:26)\n    at Object.beforeRender (sandbox.js:52:29)\n    at executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"nintr9pjlljtgxz","previousOperationId":"5mggsfjjs4ohpbx"}
{"type":"log","timestamp":1674939728176,"level":"warn","message":"Rendering request 6 finished with error in 85 ms","meta":{"rootId":"ywf4z3cd4sguk5h","id":"ywf4z3cd4sguk5h"},"id":"hjspmonjr1n4dyn","previousOperationId":"5mggsfjjs4ohpbx"}
{"type":"error","timestamp":1674939728182,"code":"ERR_INVALID_PROTOCOL","statusCode":400,"weak":true,"decoratedSuffix":"\n\n(sandbox.js line 7:14)\n\n   5 | function fetchOrders() {\n   6 |     return new Promise((resolve, reject) => {\n>  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n     |              ^\n   8 |         (result) => {\n   9 |             var str = '';\n  10 |             result.on('data', (b) => str += b);\n\n(sandbox.js line 6:12)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |     return new Promise((resolve, reject) => {\n    |            ^\n  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n  8 |         (result) => {\n  9 |             var str = '';\n\n(sandbox.js line 19:26)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     const orders = await fetchOrders()\n     |                          ^\n  20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n\n(sandbox.js line 52:29)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  53 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"5mggsfjjs4ohpbx","id":"xqflidmv2fh6bbd","stack":"TypeError [ERR_INVALID_PROTOCOL]: Protocol \"https:\" not supported. Expected \"http:\"\n    at new NodeError (node:internal/errors:371:5)\n    at new ClientRequest (node:_http_client:158:11)\n    at request (node:http:96:10)\n    at Object.get (node:http:107:15)\n    at sandbox.js:7:14\n    at new Promise (<anonymous>)\n    at fetchOrders (sandbox.js:6:12)\n    at prepareDataSource (sandbox.js:19:26)\n    at Object.beforeRender (sandbox.js:52:29)\n    at executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)","message":"Error when evaluating custom script /samples/Orders/orders-script\nProtocol \"https:\" not supported. Expected \"http:\"\n\n(sandbox.js line 7:14)\n\n   5 | function fetchOrders() {\n   6 |     return new Promise((resolve, reject) => {\n>  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n     |              ^\n   8 |         (result) => {\n   9 |             var str = '';\n  10 |             result.on('data', (b) => str += b);\n\n(sandbox.js line 6:12)\n\n  4 | // call remote http rest api\n  5 | function fetchOrders() {\n> 6 |     return new Promise((resolve, reject) => {\n    |            ^\n  7 |         http.get('https://services.odata.org/V4/Northwind/Northwind.svc/Orders',\n  8 |         (result) => {\n  9 |             var str = '';\n\n(sandbox.js line 19:26)\n\n  17 | // group the data for report\n  18 | async function prepareDataSource() {\n> 19 |     const orders = await fetchOrders()\n     |                          ^\n  20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n\n(sandbox.js line 52:29)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  53 | }\n\n"}
