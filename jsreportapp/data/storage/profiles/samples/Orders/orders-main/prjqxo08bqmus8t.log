{"type":"operationStart","subtype":"profile","data":{"_id":"jVxzewRDMAgItU4T","timestamp":"2023-01-28T21:16:53.900Z","state":"queued","mode":"standard","creationDate":"2023-01-28T21:16:53.902Z","modificationDate":"2023-01-28T21:16:53.902Z","shortid":"ChpKJNE","$entitySet":"profiles"},"doDiffs":false,"timestamp":1674940613901,"id":"mrs61z5gppb3vcx","previousOperationId":null,"operationId":"tl0sx7tk7v0m8lr"}
{"type":"log","level":"info","message":"Render request 17 queued for execution and waiting for available worker","previousOperationId":"tl0sx7tk7v0m8lr","timestamp":1674940613902,"id":"khchgpq4l6b589n"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"tl0sx7tk7v0m8lr","timestamp":1674940613914,"id":"7cq4fx4q1oujeew","previousEventId":"mrs61z5gppb3vcx","operationId":"mnyzg9ontqjx70p"}
{"type":"log","timestamp":1674940613914,"level":"info","message":"Starting rendering request 17","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"zpepx0lb8ao5s8v","previousOperationId":"mnyzg9ontqjx70p"}
{"type":"log","timestamp":1674940613915,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"gi7slftkj0xn03a","previousOperationId":"mnyzg9ontqjx70p"}
{"type":"log","timestamp":1674940613916,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"j3bbpkek05yinhc","previousOperationId":"mnyzg9ontqjx70p"}
{"type":"log","timestamp":1674940613921,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"yp2pkzcfwaouevo","previousOperationId":"mnyzg9ontqjx70p"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1674940613941,"id":"vug909novlr692d","previousEventId":"7cq4fx4q1oujeew","operationId":"78r2g34nz2fzjbg","previousOperationId":"mnyzg9ontqjx70p"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"78r2g34nz2fzjbg","timestamp":1674940613941,"id":"jfxfhicmayxfkqu","previousEventId":"vug909novlr692d","operationId":"481oi3jvtxeavkj"}
{"type":"log","timestamp":1674940614275,"level":"debug","message":"(console:log) <ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: false,\n    endEmitted: false,\n    reading: false,\n    constructed: true,\n    sync: true,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: true,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: false,\n    errored: null,\n    closed: false,\n    closeEmitted: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: true,\n    dataEmitted: false,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] {\n    end: [Function: responseOnEnd],\n    data: [Function (anonymous)]\n  },\n  _eventsCount: 2,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: 'localhost',\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: false,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: true,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      free: [Function: onFree],\n      close: [Array],\n      timeout: [Array],\n      agentRemove: [Function: onRemove],\n      error: [Function: socketErrorListener],\n      data: [Function: socketOnData],\n      drain: [Function: ondrain]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: false,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: false,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: null,\n    _server: null,\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': null,\n      '6': null,\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: [ClientRequest],\n      maxHeaderPairs: 2000,\n      _consumed: false,\n      onIncoming: [Function: parserOnIncomingClient],\n      [Symbol(owner_symbol)]: [HTTPClientAsyncResource]\n    },\n    _httpMessage: ClientRequest {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: false,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: false,\n      socket: [Circular *1],\n      _header: 'GET /api/authors HTTP/1.1\\r\\nHost: localhost:8000\\r\\nConnection: close\\r\\n\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop],\n      agent: [Agent],\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      path: '/api/authors',\n      _ended: false,\n      res: [Circular *2],\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: [HTTPParser],\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'localhost',\n      protocol: 'http:',\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(async_id_symbol)]: 70620,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  rawHeaders: [\n    'Host',\n    'localhost:8000',\n    'Date',\n    'Sat, 28 Jan 2023 21:16:54 GMT',\n    'Connection',\n    'close',\n    'X-Powered-By',\n    'PHP/8.1.10',\n    'Cache-Control',\n    'no-cache, private',\n    'Date',\n    'Sat, 28 Jan 2023 21:16:54 GMT',\n    'Content-Type',\n    'application/json',\n    'X-RateLimit-Limit',\n    '60',\n    'X-RateLimit-Remaining',\n    '59',\n    'Access-Control-Allow-Origin',\n    '*'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '',\n  method: null,\n  statusCode: 200,\n  statusMessage: 'OK',\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: 'localhost',\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: false,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: true,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      free: [Function: onFree],\n      close: [Array],\n      timeout: [Array],\n      agentRemove: [Function: onRemove],\n      error: [Function: socketErrorListener],\n      data: [Function: socketOnData],\n      drain: [Function: ondrain]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: false,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: false,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: null,\n    _server: null,\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': null,\n      '6': null,\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: [ClientRequest],\n      maxHeaderPairs: 2000,\n      _consumed: false,\n      onIncoming: [Function: parserOnIncomingClient],\n      [Symbol(owner_symbol)]: [HTTPClientAsyncResource]\n    },\n    _httpMessage: ClientRequest {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: true,\n      chunkedEncoding: false,\n      shouldKeepAlive: false,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: false,\n      sendDate: false,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: 0,\n      _hasBody: true,\n      _trailer: '',\n      finished: true,\n      _headerSent: true,\n      _closed: false,\n      socket: [Circular *1],\n      _header: 'GET /api/authors HTTP/1.1\\r\\nHost: localhost:8000\\r\\nConnection: close\\r\\n\\r\\n',\n      _keepAliveTimeout: 0,\n      _onPendingData: [Function: nop],\n      agent: [Agent],\n      socketPath: undefined,\n      method: 'GET',\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      path: '/api/authors',\n      _ended: false,\n      res: [Circular *2],\n      aborted: false,\n      timeoutCb: null,\n      upgradeOrConnect: false,\n      parser: [HTTPParser],\n      maxHeadersCount: null,\n      reusedSocket: false,\n      host: 'localhost',\n      protocol: 'http:',\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype]\n    },\n    [Symbol(async_id_symbol)]: 70620,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: false,\n  _dumped: false,\n  req: <ref *3> ClientRequest {\n    _events: [Object: null prototype] {\n      prefinish: [Function: requestOnPrefinish]\n    },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: true,\n    chunkedEncoding: false,\n    shouldKeepAlive: false,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: false,\n    sendDate: false,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: 0,\n    _hasBody: true,\n    _trailer: '',\n    finished: true,\n    _headerSent: true,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: 'localhost',\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: false,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: null,\n      _server: null,\n      parser: [HTTPParser],\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 70620,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: 'GET /api/authors HTTP/1.1\\r\\nHost: localhost:8000\\r\\nConnection: close\\r\\n\\r\\n',\n    _keepAliveTimeout: 0,\n    _onPendingData: [Function: nop],\n    agent: Agent {\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype],\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype],\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 1000,\n      keepAlive: false,\n      maxSockets: Infinity,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(kCapture)]: false\n    },\n    socketPath: undefined,\n    method: 'GET',\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    path: '/api/authors',\n    _ended: false,\n    res: [Circular *2],\n    aborted: false,\n    timeoutCb: null,\n    upgradeOrConnect: false,\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': null,\n      '6': null,\n      _headers: [],\n      _url: '',\n      socket: [Socket],\n      incoming: [Circular *2],\n      outgoing: [Circular *3],\n      maxHeaderPairs: 2000,\n      _consumed: false,\n      onIncoming: [Function: parserOnIncomingClient],\n      [Symbol(owner_symbol)]: [HTTPClientAsyncResource]\n    },\n    maxHeadersCount: null,\n    reusedSocket: false,\n    host: 'localhost',\n    protocol: 'http:',\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { host: [Array] }\n  },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: null,\n  [Symbol(kHeadersCount)]: 20,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}","meta":{"userLevel":true,"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"sr0v7io7o5f02ez","previousOperationId":"481oi3jvtxeavkj"}
{"type":"log","timestamp":1674940614276,"level":"debug","message":"(console:log) undefined","meta":{"userLevel":true,"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"i4wp2wbk6tm0s8a","previousOperationId":"481oi3jvtxeavkj"}
{"type":"log","timestamp":1674940614279,"level":"warn","message":"Error when processing render request 17\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 23:40)\n\n  21 |     const orders = await fetchOrders()\n  22 |     console.log(orders);\n> 23 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  24 |         a[v.name] = a[v.name] || []\n  25 |         a[v.name].push(v)\n  26 |         return a\n\n(sandbox.js line 55:23)\n\n  53 | // add jsreport hook which modifies the report input data\n  54 | async function beforeRender(req, res) {\n> 55 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  56 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:23:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:55:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"r6344kdsiup0uli","previousOperationId":"481oi3jvtxeavkj"}
{"type":"log","timestamp":1674940614279,"level":"warn","message":"Rendering request 17 finished with error in 379 ms","meta":{"rootId":"prjqxo08bqmus8t","id":"prjqxo08bqmus8t"},"id":"9psennryde2349m","previousOperationId":"481oi3jvtxeavkj"}
{"type":"error","timestamp":1674940614297,"statusCode":400,"weak":true,"lineNumber":23,"decoratedSuffix":"\n\n(sandbox.js line 23:40)\n\n  21 |     const orders = await fetchOrders()\n  22 |     console.log(orders);\n> 23 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  24 |         a[v.name] = a[v.name] || []\n  25 |         a[v.name].push(v)\n  26 |         return a\n\n(sandbox.js line 55:23)\n\n  53 | // add jsreport hook which modifies the report input data\n  54 | async function beforeRender(req, res) {\n> 55 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  56 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        http.get('http://localhost:8000/api/authors',\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            console.log(result);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        })\n        \n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    console.log(orders);\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.name] = a[v.name] || []\n        a[v.name].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"481oi3jvtxeavkj","id":"guep9deyk69jrxd","stack":"TypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:23:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:55:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 23:40)\n\n  21 |     const orders = await fetchOrders()\n  22 |     console.log(orders);\n> 23 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  24 |         a[v.name] = a[v.name] || []\n  25 |         a[v.name].push(v)\n  26 |         return a\n\n(sandbox.js line 55:23)\n\n  53 | // add jsreport hook which modifies the report input data\n  54 | async function beforeRender(req, res) {\n> 55 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  56 | }\n\n"}
