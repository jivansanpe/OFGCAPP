{"type":"operationStart","subtype":"profile","data":{"_id":"smQoxKuiXwadGvOu","timestamp":"2023-02-01T16:50:09.759Z","state":"queued","mode":"standard","creationDate":"2023-02-01T16:50:09.761Z","modificationDate":"2023-02-01T16:50:09.761Z","shortid":"mM7juXU","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675270209760,"id":"9mvk3j8lawnkgkf","previousOperationId":null,"operationId":"9h853yjh30x4wh0"}
{"type":"log","level":"info","message":"Render request 36 queued for execution and waiting for available worker","previousOperationId":"9h853yjh30x4wh0","timestamp":1675270209761,"id":"njymitbv0ibq3uj"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"9h853yjh30x4wh0","timestamp":1675270209769,"id":"8zvl6rwf67x5qxa","previousEventId":"9mvk3j8lawnkgkf","operationId":"ug0b5n7ns836om8"}
{"type":"log","timestamp":1675270209769,"level":"info","message":"Starting rendering request 36","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"vom5j0okp8wbxr5","previousOperationId":"ug0b5n7ns836om8"}
{"type":"log","timestamp":1675270209769,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"0drjm1to8ftk3az","previousOperationId":"ug0b5n7ns836om8"}
{"type":"log","timestamp":1675270209770,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"qkff5yclamkdayu","previousOperationId":"ug0b5n7ns836om8"}
{"type":"log","timestamp":1675270209774,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"efbyue5ghqssrhk","previousOperationId":"ug0b5n7ns836om8"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675270209800,"id":"bgbbmlkyvj9xbdu","previousEventId":"8zvl6rwf67x5qxa","operationId":"zrl2yllmvlehheq","previousOperationId":"ug0b5n7ns836om8"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"zrl2yllmvlehheq","timestamp":1675270209800,"id":"2qjp9b29fgxclia","previousEventId":"bgbbmlkyvj9xbdu","operationId":"z2w11pjrcv02enl"}
{"type":"log","timestamp":1675270209801,"level":"debug","message":"(console:log) AAAAAAAAAAAAAAAAAAAAAAA  undefined","meta":{"userLevel":true,"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"cxkwe64e9ykx7u8","previousOperationId":"z2w11pjrcv02enl"}
{"type":"log","timestamp":1675270210070,"level":"debug","message":"(console:log) {\n  status: 200,\n  statusText: 'OK',\n  headers: {\n    host: 'localhost:8000',\n    date: 'Wed, 01 Feb 2023 16:50:10 GMT, Wed, 01 Feb 2023 16:50:10 GMT',\n    connection: 'close',\n    'x-powered-by': 'PHP/8.1.10',\n    'cache-control': 'no-cache, private',\n    'content-type': 'application/json',\n    'x-ratelimit-limit': '60',\n    'x-ratelimit-remaining': '59',\n    'access-control-allow-origin': '*'\n  },\n  config: {\n    transitional: {\n      silentJSONParsing: true,\n      forcedJSONParsing: true,\n      clarifyTimeoutError: false\n    },\n    adapter: [Function: httpAdapter],\n    transformRequest: [ [Function: transformRequest] ],\n    transformResponse: [ [Function: transformResponse] ],\n    timeout: 0,\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n    maxContentLength: -1,\n    maxBodyLength: -1,\n    validateStatus: [Function: validateStatus],\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'User-Agent': 'axios/0.24.0'\n    },\n    method: 'get',\n    url: 'http://localhost:8000/api/authors',\n    data: undefined\n  },\n  request: <ref *1> ClientRequest {\n    _events: [Object: null prototype] {\n      abort: [Function (anonymous)],\n      aborted: [Function (anonymous)],\n      connect: [Function (anonymous)],\n      error: [Function (anonymous)],\n      socket: [Function (anonymous)],\n      timeout: [Function (anonymous)],\n      prefinish: [Function: requestOnPrefinish]\n    },\n    _eventsCount: 7,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: true,\n    chunkedEncoding: false,\n    shouldKeepAlive: false,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: false,\n    sendDate: false,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: 0,\n    _hasBody: true,\n    _trailer: '',\n    finished: true,\n    _headerSent: true,\n    _closed: false,\n    socket: Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: 'localhost',\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: false,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: null,\n      _server: null,\n      parser: null,\n      _httpMessage: [Circular *1],\n      write: [Function: writeAfterFIN],\n      [Symbol(async_id_symbol)]: 92767,\n      [Symbol(kHandle)]: null,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesRead)]: 542,\n      [Symbol(kBytesWritten)]: 139,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: 'GET /api/authors HTTP/1.1\\r\\n' +\n      'Accept: application/json, text/plain, */*\\r\\n' +\n      'User-Agent: axios/0.24.0\\r\\n' +\n      'Host: localhost:8000\\r\\n' +\n      'Connection: close\\r\\n' +\n      '\\r\\n',\n    _keepAliveTimeout: 0,\n    _onPendingData: [Function: nop],\n    agent: Agent {\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      defaultPort: 80,\n      protocol: 'http:',\n      options: [Object: null prototype],\n      requests: [Object: null prototype] {},\n      sockets: [Object: null prototype],\n      freeSockets: [Object: null prototype] {},\n      keepAliveMsecs: 1000,\n      keepAlive: false,\n      maxSockets: Infinity,\n      maxFreeSockets: 256,\n      scheduling: 'lifo',\n      maxTotalSockets: Infinity,\n      totalSocketCount: 1,\n      [Symbol(kCapture)]: false\n    },\n    socketPath: undefined,\n    method: 'GET',\n    maxHeaderSize: undefined,\n    insecureHTTPParser: undefined,\n    path: '/api/authors',\n    _ended: true,\n    res: IncomingMessage {\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 3,\n      _maxListeners: undefined,\n      socket: [Socket],\n      httpVersionMajor: 1,\n      httpVersionMinor: 1,\n      httpVersion: '1.1',\n      complete: true,\n      rawHeaders: [Array],\n      rawTrailers: [],\n      aborted: false,\n      upgrade: false,\n      url: '',\n      method: null,\n      statusCode: 200,\n      statusMessage: 'OK',\n      client: [Socket],\n      _consuming: true,\n      _dumped: false,\n      req: [Circular *1],\n      responseUrl: 'http://localhost:8000/api/authors',\n      redirects: [],\n      [Symbol(kCapture)]: false,\n      [Symbol(kHeaders)]: [Object],\n      [Symbol(kHeadersCount)]: 20,\n      [Symbol(kTrailers)]: null,\n      [Symbol(kTrailersCount)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    aborted: false,\n    timeoutCb: null,\n    upgradeOrConnect: false,\n    parser: null,\n    maxHeadersCount: null,\n    reusedSocket: false,\n    host: 'localhost',\n    protocol: 'http:',\n    _redirectable: Writable {\n      _writableState: [WritableState],\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _options: [Object],\n      _ended: true,\n      _ending: true,\n      _redirectCount: 0,\n      _redirects: [],\n      _requestBodyLength: 0,\n      _requestBodyBuffers: [],\n      _onNativeResponse: [Function (anonymous)],\n      _currentRequest: [Circular *1],\n      _currentUrl: 'http://localhost:8000/api/authors',\n      [Symbol(kCapture)]: false\n    },\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] {\n      accept: [Array],\n      'user-agent': [Array],\n      host: [Array]\n    }\n  },\n  data: { data: [ [Object], [Object] ] }\n}","meta":{"userLevel":true,"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"e6t4o3xzkjli60a","previousOperationId":"z2w11pjrcv02enl"}
{"type":"log","timestamp":1675270210072,"level":"warn","message":"Error when processing render request 36\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 11:10)\n\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n  10 |      console.log(resAuthors)\n> 11 |      req.data.authors = { ...req.data,\n     |          ^\n  12 |         ...resAuthors.data.map(author=> {\n  13 |           return {\n  14 |             ...author,\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:11:10)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:23:21)\n    at async Object.beforeRender (sandbox.js:58:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"p18p5jsnhplwpls","previousOperationId":"z2w11pjrcv02enl"}
{"type":"log","timestamp":1675270210072,"level":"warn","message":"Rendering request 36 finished with error in 313 ms","meta":{"rootId":"b9arqoy78h4qc8c","id":"b9arqoy78h4qc8c"},"id":"vor1gjvw0cu9lwp","previousOperationId":"z2w11pjrcv02enl"}
{"type":"error","timestamp":1675270210080,"statusCode":400,"weak":true,"lineNumber":11,"decoratedSuffix":"\n\n(sandbox.js line 11:10)\n\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n  10 |      console.log(resAuthors)\n> 11 |      req.data.authors = { ...req.data,\n     |          ^\n  12 |         ...resAuthors.data.map(author=> {\n  13 |           return {\n  14 |             ...author,\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\nconsole.log('AAAAAAAAAAAAAAAAAAAAAAA ' , req);\n\n    const resAuthors = await axios.get('http://localhost:8000/api/authors')\n     console.log(resAuthors)\n     req.data.authors = { ...req.data,\n        ...resAuthors.data.map(author=> {\n          return {\n            ...author,\n          }\n        })\n    }\n\n    return resAuthors;\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"z2w11pjrcv02enl","id":"yvojmt808johmdx","stack":"TypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:11:10)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:23:21)\n    at async Object.beforeRender (sandbox.js:58:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 11:10)\n\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n  10 |      console.log(resAuthors)\n> 11 |      req.data.authors = { ...req.data,\n     |          ^\n  12 |         ...resAuthors.data.map(author=> {\n  13 |           return {\n  14 |             ...author,\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n"}
