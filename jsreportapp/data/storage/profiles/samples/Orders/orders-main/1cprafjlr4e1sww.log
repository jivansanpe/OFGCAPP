{"type":"operationStart","subtype":"profile","data":{"_id":"9dh0nem2n9NOZZWX","timestamp":"2023-02-01T17:25:55.444Z","state":"queued","mode":"standard","creationDate":"2023-02-01T17:25:55.447Z","modificationDate":"2023-02-01T17:25:55.447Z","shortid":"hbamaun","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675272355445,"id":"p58o9z3fnf9lkwv","previousOperationId":null,"operationId":"6e77h6eqyg9hg3u"}
{"type":"log","level":"info","message":"Render request 24 queued for execution and waiting for available worker","previousOperationId":"6e77h6eqyg9hg3u","timestamp":1675272355446,"id":"mmtzn4f0fw2gsuh"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"6e77h6eqyg9hg3u","timestamp":1675272355456,"id":"ry2qkc0owq0e795","previousEventId":"p58o9z3fnf9lkwv","operationId":"ci6jb7ohwjxvvzq"}
{"type":"log","timestamp":1675272355456,"level":"info","message":"Starting rendering request 24","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"9ipp11yhmvayg7q","previousOperationId":"ci6jb7ohwjxvvzq"}
{"type":"log","timestamp":1675272355457,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"eikclyocidedjxm","previousOperationId":"ci6jb7ohwjxvvzq"}
{"type":"log","timestamp":1675272355457,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"ewuoeafi7uwpnmk","previousOperationId":"ci6jb7ohwjxvvzq"}
{"type":"log","timestamp":1675272355460,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"lhthamh269rvo8s","previousOperationId":"ci6jb7ohwjxvvzq"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675272355490,"id":"wbzplnm7hie406t","previousEventId":"ry2qkc0owq0e795","operationId":"ctrdnichz4d6kka","previousOperationId":"ci6jb7ohwjxvvzq"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"ctrdnichz4d6kka","timestamp":1675272355490,"id":"d8cviv6shcozlh0","previousEventId":"wbzplnm7hie406t","operationId":"964gfg0dm0lh3pn"}
{"type":"log","timestamp":1675272355490,"level":"debug","message":"(console:log) AAAAAAAAAAAAAAAAAAAAAAA  undefined","meta":{"userLevel":true,"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"eocn0u2ct2ogsgi","previousOperationId":"964gfg0dm0lh3pn"}
{"type":"log","timestamp":1675272355760,"level":"warn","message":"Error when processing render request 24\n(because) error when evaluating custom script /samples/Orders/orders-script\nid is not defined\n\n(sandbox.js line 10:42)\n\n   8 |\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n> 10 |      console.log(resAuthors.data.data[0][id])\n     |                                          ^\n  11 |     //  req.data.authors = { ...req.data,\n  12 |     //     ...resAuthors.data.map(author=> {\n  13 |     //       return {\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n\nReferenceError: id is not defined\n    at fetchOrders (sandbox.js:10:42)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:23:21)\n    at async Object.beforeRender (sandbox.js:58:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"9bzbbgve30pixk4","previousOperationId":"964gfg0dm0lh3pn"}
{"type":"log","timestamp":1675272355761,"level":"warn","message":"Rendering request 24 finished with error in 317 ms","meta":{"rootId":"1cprafjlr4e1sww","id":"1cprafjlr4e1sww"},"id":"u7man8ynl2pye2m","previousOperationId":"964gfg0dm0lh3pn"}
{"type":"error","timestamp":1675272355765,"statusCode":400,"weak":true,"lineNumber":10,"decoratedSuffix":"\n\n(sandbox.js line 10:42)\n\n   8 |\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n> 10 |      console.log(resAuthors.data.data[0][id])\n     |                                          ^\n  11 |     //  req.data.authors = { ...req.data,\n  12 |     //     ...resAuthors.data.map(author=> {\n  13 |     //       return {\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\nconsole.log('AAAAAAAAAAAAAAAAAAAAAAA ' , req);\n\n    const resAuthors = await axios.get('http://localhost:8000/api/authors')\n     console.log(resAuthors.data.data[0][id])\n    //  req.data.authors = { ...req.data,\n    //     ...resAuthors.data.map(author=> {\n    //       return {\n    //         ...author,\n    //       }\n    //     })\n    // }\n\n    return resAuthors.data.data[0];\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"964gfg0dm0lh3pn","id":"pqu31lcek4zwfwe","stack":"ReferenceError: id is not defined\n    at fetchOrders (sandbox.js:10:42)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:23:21)\n    at async Object.beforeRender (sandbox.js:58:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\nid is not defined\n\n(sandbox.js line 10:42)\n\n   8 |\n   9 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n> 10 |      console.log(resAuthors.data.data[0][id])\n     |                                          ^\n  11 |     //  req.data.authors = { ...req.data,\n  12 |     //     ...resAuthors.data.map(author=> {\n  13 |     //       return {\n\n(sandbox.js line 23:21)\n\n  21 | // group the data for report\n  22 | async function prepareDataSource() {\n> 23 |     const authors = await fetchOrders()\n     |                     ^\n  24 |     return authors;\n  25 |     // console.log(orders);\n  26 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 58:23)\n\n  56 | // add jsreport hook which modifies the report input data\n  57 | async function beforeRender(req, res) {\n> 58 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  59 | }\n\n"}
