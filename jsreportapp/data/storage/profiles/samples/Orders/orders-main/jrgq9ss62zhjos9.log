{"type":"operationStart","subtype":"profile","data":{"_id":"XyvUdKCL5nntuK0D","timestamp":"2023-02-01T16:36:04.533Z","state":"queued","mode":"standard","creationDate":"2023-02-01T16:36:04.535Z","modificationDate":"2023-02-01T16:36:04.535Z","shortid":"hbHYxjn","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675269364534,"id":"dd7nmpo9vqfm3g2","previousOperationId":null,"operationId":"nykhvh6f9mws95x"}
{"type":"log","level":"info","message":"Render request 28 queued for execution and waiting for available worker","previousOperationId":"nykhvh6f9mws95x","timestamp":1675269364534,"id":"xwzld9w7quy9x0h"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"nykhvh6f9mws95x","timestamp":1675269364548,"id":"ekgxitdyv2dpgkb","previousEventId":"dd7nmpo9vqfm3g2","operationId":"95wdh3o62cfylir"}
{"type":"log","timestamp":1675269364548,"level":"info","message":"Starting rendering request 28","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"v04hp681lcv7l6s","previousOperationId":"95wdh3o62cfylir"}
{"type":"log","timestamp":1675269364549,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"m0twimb5m2pab0r","previousOperationId":"95wdh3o62cfylir"}
{"type":"log","timestamp":1675269364551,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"oim4ls8ncmtt2ls","previousOperationId":"95wdh3o62cfylir"}
{"type":"log","timestamp":1675269364555,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"b94yvoyse0obeo3","previousOperationId":"95wdh3o62cfylir"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675269364593,"id":"5dqo9cx4cdl4bet","previousEventId":"ekgxitdyv2dpgkb","operationId":"adcrm0pb53hh1fs","previousOperationId":"95wdh3o62cfylir"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"adcrm0pb53hh1fs","timestamp":1675269364593,"id":"t5gb8svw6d56vty","previousEventId":"5dqo9cx4cdl4bet","operationId":"63y6jzbf2ymn9wh"}
{"type":"log","timestamp":1675269364596,"level":"warn","message":"Error when processing render request 28\n(because) error when evaluating custom script /samples/Orders/orders-script\nfetchOrders is not defined\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:29)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  58 | }\n\n(sandbox.js line 70:18)\nReferenceError: fetchOrders is not defined\n    at prepareDataSource (sandbox.js:22:21)\n    at Object.beforeRender (sandbox.js:57:29)\n    at executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:70:18","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"k6ek9ejp8zxquzr","previousOperationId":"63y6jzbf2ymn9wh"}
{"type":"log","timestamp":1675269364596,"level":"warn","message":"Rendering request 28 finished with error in 63 ms","meta":{"rootId":"jrgq9ss62zhjos9","id":"jrgq9ss62zhjos9"},"id":"qa3dx121dac9vl3","previousOperationId":"63y6jzbf2ymn9wh"}
{"type":"error","timestamp":1675269364600,"statusCode":400,"weak":true,"lineNumber":22,"decoratedSuffix":"\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:29)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  58 | }\n\n(sandbox.js line 70:18)","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function beforeRender(req, res) {\n\nconsole.log('AAAAAAAAAAAAAAAAAAAAAAA ' , req);\n\n    const resSessions = await axios.get('http://localhost:8000/api/authors')\n    // console.log(resSessions)\n\n    req.data.authors = { ...req.data,\n        ...resSessions.data.map(session=> {\n          return {\n            ...author,\n          }\n        })\n    }\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"63y6jzbf2ymn9wh","id":"aqgyhj1wjmeaj10","stack":"ReferenceError: fetchOrders is not defined\n    at prepareDataSource (sandbox.js:22:21)\n    at Object.beforeRender (sandbox.js:57:29)\n    at executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:35)\n    at sandbox.js:70:18","message":"Error when evaluating custom script /samples/Orders/orders-script\nfetchOrders is not defined\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:29)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                             ^\n  58 | }\n\n(sandbox.js line 70:18)"}
