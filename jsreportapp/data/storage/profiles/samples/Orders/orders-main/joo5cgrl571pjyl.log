{"type":"operationStart","subtype":"profile","data":{"_id":"wKQg93q8mCpzgDAY","timestamp":"2023-02-05T17:32:40.527Z","state":"queued","mode":"standard","creationDate":"2023-02-05T17:32:40.529Z","modificationDate":"2023-02-05T17:32:40.529Z","shortid":"H0nqk1g","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675618360528,"id":"1g79vg7009q5rmw","previousOperationId":null,"operationId":"u4g7taye7o1c4rh"}
{"type":"log","level":"info","message":"Render request 4 queued for execution and waiting for available worker","previousOperationId":"u4g7taye7o1c4rh","timestamp":1675618360528,"id":"g96k9fuqj0jykf8"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"u4g7taye7o1c4rh","timestamp":1675618360541,"id":"cwf05srd1usoi9b","previousEventId":"1g79vg7009q5rmw","operationId":"rncs1s5ppktk0ob"}
{"type":"log","timestamp":1675618360541,"level":"info","message":"Starting rendering request 4","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"ex75hwdaf6btsgl","previousOperationId":"rncs1s5ppktk0ob"}
{"type":"log","timestamp":1675618360542,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"m928fgmdf4fdmvq","previousOperationId":"rncs1s5ppktk0ob"}
{"type":"log","timestamp":1675618360543,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"gfbfspiy8pqwvyr","previousOperationId":"rncs1s5ppktk0ob"}
{"type":"log","timestamp":1675618360546,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"bokjen69j8x7bvl","previousOperationId":"rncs1s5ppktk0ob"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675618360581,"id":"swmrlychnytxnkv","previousEventId":"cwf05srd1usoi9b","operationId":"vl7knp6pwgdnv2b","previousOperationId":"rncs1s5ppktk0ob"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"vl7knp6pwgdnv2b","timestamp":1675618360581,"id":"6xinqytxvwdanzx","previousEventId":"swmrlychnytxnkv","operationId":"b0xh4454kc50p73"}
{"type":"log","timestamp":1675618360890,"level":"warn","message":"Error when processing render request 4\n(because) error when evaluating custom script /samples/Orders/orders-script\ncount is not defined\n\n(sandbox.js line 50:16)\n\n  48 |      req.data.authors = resAuthors.data.data;\n  49 |      req.data.authors.forEach(author => \n> 50 |         author[count]= author[pieces].length);\n     |                ^\n  51 |     console.log(resAuthors.data)\n  52 |\n  53 |     return req.data.authors;\n\n(sandbox.js line 49:23)\n\n  47 |     const resAuthors = await axios.get('http://localhost:8000/api/authors?include=pieces')\n  48 |      req.data.authors = resAuthors.data.data;\n> 49 |      req.data.authors.forEach(author => \n     |                       ^\n  50 |         author[count]= author[pieces].length);\n  51 |     console.log(resAuthors.data)\n  52 |\n\n\nReferenceError: count is not defined\n    at sandbox.js:50:16\n    at Array.forEach (<anonymous>)\n    at Object.beforeRender (sandbox.js:49:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"fclkkv9nqqxx7po","previousOperationId":"b0xh4454kc50p73"}
{"type":"log","timestamp":1675618360890,"level":"warn","message":"Rendering request 4 finished with error in 363 ms","meta":{"rootId":"joo5cgrl571pjyl","id":"joo5cgrl571pjyl"},"id":"yxy8f8ouj8oud9a","previousOperationId":"b0xh4454kc50p73"}
{"type":"error","timestamp":1675618360895,"statusCode":400,"weak":true,"lineNumber":50,"decoratedSuffix":"\n\n(sandbox.js line 50:16)\n\n  48 |      req.data.authors = resAuthors.data.data;\n  49 |      req.data.authors.forEach(author => \n> 50 |         author[count]= author[pieces].length);\n     |                ^\n  51 |     console.log(resAuthors.data)\n  52 |\n  53 |     return req.data.authors;\n\n(sandbox.js line 49:23)\n\n  47 |     const resAuthors = await axios.get('http://localhost:8000/api/authors?include=pieces')\n  48 |      req.data.authors = resAuthors.data.data;\n> 49 |      req.data.authors.forEach(author => \n     |                       ^\n  50 |         author[count]= author[pieces].length);\n  51 |     console.log(resAuthors.data)\n  52 |\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\n\n    \n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    const resAuthors = await axios.get('http://localhost:8000/api/authors?include=pieces')\n     req.data.authors = resAuthors.data.data;\n     req.data.authors.forEach(author => \n        author[count]= author[pieces].length);\n    console.log(resAuthors.data)\n\n    return req.data.authors;\n}"},"property":"content","logged":true,"previousOperationId":"b0xh4454kc50p73","id":"lgcybwadh6ao37l","stack":"ReferenceError: count is not defined\n    at sandbox.js:50:16\n    at Array.forEach (<anonymous>)\n    at Object.beforeRender (sandbox.js:49:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\ncount is not defined\n\n(sandbox.js line 50:16)\n\n  48 |      req.data.authors = resAuthors.data.data;\n  49 |      req.data.authors.forEach(author => \n> 50 |         author[count]= author[pieces].length);\n     |                ^\n  51 |     console.log(resAuthors.data)\n  52 |\n  53 |     return req.data.authors;\n\n(sandbox.js line 49:23)\n\n  47 |     const resAuthors = await axios.get('http://localhost:8000/api/authors?include=pieces')\n  48 |      req.data.authors = resAuthors.data.data;\n> 49 |      req.data.authors.forEach(author => \n     |                       ^\n  50 |         author[count]= author[pieces].length);\n  51 |     console.log(resAuthors.data)\n  52 |\n\n"}
