{"type":"operationStart","subtype":"profile","data":{"_id":"4lCFGY7chSQJeehN","timestamp":"2023-01-28T21:02:53.743Z","state":"queued","mode":"standard","creationDate":"2023-01-28T21:02:53.745Z","modificationDate":"2023-01-28T21:02:53.745Z","shortid":"Fn6YUQZ","$entitySet":"profiles"},"doDiffs":false,"timestamp":1674939773745,"id":"4zcm8tcb58xpyvo","previousOperationId":null,"operationId":"l67gxcxmjk6cz3o"}
{"type":"log","level":"info","message":"Render request 7 queued for execution and waiting for available worker","previousOperationId":"l67gxcxmjk6cz3o","timestamp":1674939773745,"id":"53uh9ltuz3oixse"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"l67gxcxmjk6cz3o","timestamp":1674939773762,"id":"6e5gntjlwoz2a23","previousEventId":"4zcm8tcb58xpyvo","operationId":"4oqcqsnrooprbdw"}
{"type":"log","timestamp":1674939773762,"level":"info","message":"Starting rendering request 7","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"wrnnto4qwlpv4k9","previousOperationId":"4oqcqsnrooprbdw"}
{"type":"log","timestamp":1674939773762,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"1thhowe6adjn9hw","previousOperationId":"4oqcqsnrooprbdw"}
{"type":"log","timestamp":1674939773764,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"1z0ugprmlq9x3r5","previousOperationId":"4oqcqsnrooprbdw"}
{"type":"log","timestamp":1674939773773,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"xayagt45xt1o0on","previousOperationId":"4oqcqsnrooprbdw"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1674939773806,"id":"vli0fk12e8k7ld2","previousEventId":"6e5gntjlwoz2a23","operationId":"rt6u01s3amz9t3n","previousOperationId":"4oqcqsnrooprbdw"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"rt6u01s3amz9t3n","timestamp":1674939773806,"id":"9ucvx22kgc1fgrl","previousEventId":"vli0fk12e8k7ld2","operationId":"ipts0xbgpymo4oe"}
{"type":"log","timestamp":1674939776745,"level":"warn","message":"Error when processing render request 7\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 20:40)\n\n  18 | async function prepareDataSource() {\n  19 |     const orders = await fetchOrders()\n> 20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n  23 |         return a\n\n(sandbox.js line 52:23)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  53 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:20:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:52:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"r2n3cx9ytu1s71s","previousOperationId":"ipts0xbgpymo4oe"}
{"type":"log","timestamp":1674939776745,"level":"warn","message":"Rendering request 7 finished with error in 3003 ms","meta":{"rootId":"tfhq46d6ngla7ok","id":"tfhq46d6ngla7ok"},"id":"61cd01fg81l9nsg","previousOperationId":"ipts0xbgpymo4oe"}
{"type":"error","timestamp":1674939776749,"statusCode":400,"weak":true,"lineNumber":20,"decoratedSuffix":"\n\n(sandbox.js line 20:40)\n\n  18 | async function prepareDataSource() {\n  19 |     const orders = await fetchOrders()\n> 20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n  23 |         return a\n\n(sandbox.js line 52:23)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  53 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\n\n// call remote http rest api\nfunction fetchOrders() {\n    return new Promise((resolve, reject) => {\n        http.get('http://localhost:8000/api/authors',\n        (result) => {\n            var str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => resolve(JSON.parse(str).value));\n        });\n    })\n}\n\n// group the data for report\nasync function prepareDataSource() {\n    const orders = await fetchOrders()\n    const ordersByShipCountry = orders.reduce((a, v) => {\n        a[v.ShipCountry] = a[v.ShipCountry] || []\n        a[v.ShipCountry].push(v)\n        return a\n    }, {})\n\n    return Object.keys(ordersByShipCountry).map((country) => {\n        const ordersInCountry = ordersByShipCountry[country]\n\n        const accumulated = {}\n\n        ordersInCountry.forEach((o) => {\n            o.OrderDate = new Date(o.OrderDate);\n            const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n            accumulated[key] = accumulated[key] || {\n                value: 0,\n                orderDate: o.OrderDate\n            };\n            accumulated[key].value++;\n        });\n\n        return {\n            rows: ordersInCountry,\n            country,\n            accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"ipts0xbgpymo4oe","id":"efbwpf8pu1xfa81","stack":"TypeError: Cannot read properties of undefined (reading 'reduce')\n    at prepareDataSource (sandbox.js:20:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Object.beforeRender (sandbox.js:52:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)\n    at async ListenerCollection.fire (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\shared\\listenerCollection.js:157:21)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'reduce')\n\n(sandbox.js line 20:40)\n\n  18 | async function prepareDataSource() {\n  19 |     const orders = await fetchOrders()\n> 20 |     const ordersByShipCountry = orders.reduce((a, v) => {\n     |                                        ^\n  21 |         a[v.ShipCountry] = a[v.ShipCountry] || []\n  22 |         a[v.ShipCountry].push(v)\n  23 |         return a\n\n(sandbox.js line 52:23)\n\n  50 | // add jsreport hook which modifies the report input data\n  51 | async function beforeRender(req, res) {\n> 52 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  53 | }\n\n"}
