{"type":"operationStart","subtype":"profile","data":{"_id":"3woo7UjodV4rl3QB","timestamp":"2023-02-01T16:37:14.823Z","state":"queued","mode":"standard","creationDate":"2023-02-01T16:37:14.825Z","modificationDate":"2023-02-01T16:37:14.825Z","shortid":"R3QxcUN","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675269434824,"id":"6zgc561uhnceado","previousOperationId":null,"operationId":"ouyzx999ae1jceo"}
{"type":"log","level":"info","message":"Render request 33 queued for execution and waiting for available worker","previousOperationId":"ouyzx999ae1jceo","timestamp":1675269434824,"id":"ps0g06i950mcx2d"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"ouyzx999ae1jceo","timestamp":1675269434833,"id":"x0zit7c74vgxxpy","previousEventId":"6zgc561uhnceado","operationId":"8gyb6sw23op0aoj"}
{"type":"log","timestamp":1675269434833,"level":"info","message":"Starting rendering request 33","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"84xbwmgjysd6f9e","previousOperationId":"8gyb6sw23op0aoj"}
{"type":"log","timestamp":1675269434834,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"980jzjtg6r4o63s","previousOperationId":"8gyb6sw23op0aoj"}
{"type":"log","timestamp":1675269434835,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"g2azdbahawzsqu5","previousOperationId":"8gyb6sw23op0aoj"}
{"type":"log","timestamp":1675269434839,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"cfwtqp9x8ay1sff","previousOperationId":"8gyb6sw23op0aoj"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675269434863,"id":"bpqsaxy9avzqm04","previousEventId":"x0zit7c74vgxxpy","operationId":"bvohw0qu5hczn90","previousOperationId":"8gyb6sw23op0aoj"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"bvohw0qu5hczn90","timestamp":1675269434863,"id":"dhl8br5d50npr0q","previousEventId":"bpqsaxy9avzqm04","operationId":"yeig5x8qmzjyt49"}
{"type":"log","timestamp":1675269434863,"level":"debug","message":"(console:log) AAAAAAAAAAAAAAAAAAAAAAA  undefined","meta":{"userLevel":true,"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"ad1cnyonz3yhe7w","previousOperationId":"yeig5x8qmzjyt49"}
{"type":"log","timestamp":1675269435089,"level":"warn","message":"Error when processing render request 33\n(because) error when evaluating custom script /samples/Orders/orders-script\nresAuthors.map is not a function\n\n(sandbox.js line 13:23)\n\n  11 |\n  12 |     req.authors = { ...req,\n> 13 |         ...resAuthors.map(author=> {\n     |                       ^\n  14 |           return {\n  15 |             ...author,\n  16 |           }\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n\nTypeError: resAuthors.map is not a function\n    at fetchOrders (sandbox.js:13:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:22:21)\n    at async Object.beforeRender (sandbox.js:57:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"g96ds48qv1fy8ip","previousOperationId":"yeig5x8qmzjyt49"}
{"type":"log","timestamp":1675269435089,"level":"warn","message":"Rendering request 33 finished with error in 266 ms","meta":{"rootId":"fgq1721tjlv9dio","id":"fgq1721tjlv9dio"},"id":"42b5jdzuiioimss","previousOperationId":"yeig5x8qmzjyt49"}
{"type":"error","timestamp":1675269435093,"statusCode":400,"weak":true,"lineNumber":13,"decoratedSuffix":"\n\n(sandbox.js line 13:23)\n\n  11 |\n  12 |     req.authors = { ...req,\n> 13 |         ...resAuthors.map(author=> {\n     |                       ^\n  14 |           return {\n  15 |             ...author,\n  16 |           }\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\nconsole.log('AAAAAAAAAAAAAAAAAAAAAAA ' , req);\n\n    const resAuthors = await axios.get('http://localhost:8000/api/authors')\n    // console.log(resSessions)\n\n    req.authors = { ...req,\n        ...resAuthors.map(author=> {\n          return {\n            ...author,\n          }\n        })\n    }\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"yeig5x8qmzjyt49","id":"cw62upeol07zxsc","stack":"TypeError: resAuthors.map is not a function\n    at fetchOrders (sandbox.js:13:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:22:21)\n    at async Object.beforeRender (sandbox.js:57:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\nresAuthors.map is not a function\n\n(sandbox.js line 13:23)\n\n  11 |\n  12 |     req.authors = { ...req,\n> 13 |         ...resAuthors.map(author=> {\n     |                       ^\n  14 |           return {\n  15 |             ...author,\n  16 |           }\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n"}
