{"type":"operationStart","subtype":"profile","data":{"_id":"f11bdFd7N5km5fAm","timestamp":"2023-02-01T16:36:13.859Z","state":"queued","mode":"standard","creationDate":"2023-02-01T16:36:13.861Z","modificationDate":"2023-02-01T16:36:13.861Z","shortid":"9WNW6Nn","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675269373860,"id":"tolycfmxbro2g2m","previousOperationId":null,"operationId":"4abo4b7ynlfnup5"}
{"type":"log","level":"info","message":"Render request 29 queued for execution and waiting for available worker","previousOperationId":"4abo4b7ynlfnup5","timestamp":1675269373860,"id":"3lhrbw7ou62i4yi"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"4abo4b7ynlfnup5","timestamp":1675269373868,"id":"kf21ml42k53fbfz","previousEventId":"tolycfmxbro2g2m","operationId":"3ef4is2xdj960p8"}
{"type":"log","timestamp":1675269373868,"level":"info","message":"Starting rendering request 29","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"49w8d8l05tyeo4c","previousOperationId":"3ef4is2xdj960p8"}
{"type":"log","timestamp":1675269373868,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"ta2jtd6nf8nigb4","previousOperationId":"3ef4is2xdj960p8"}
{"type":"log","timestamp":1675269373869,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"6e26yl6nbqslvxo","previousOperationId":"3ef4is2xdj960p8"}
{"type":"log","timestamp":1675269373874,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"68h0bywumc3yr4a","previousOperationId":"3ef4is2xdj960p8"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675269373901,"id":"fy2txyl3j92zt8a","previousEventId":"kf21ml42k53fbfz","operationId":"3ie63sikonofoea","previousOperationId":"3ef4is2xdj960p8"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"3ie63sikonofoea","timestamp":1675269373901,"id":"o5oy0s36mj5e1fj","previousEventId":"fy2txyl3j92zt8a","operationId":"ziy9odumy2xeejy"}
{"type":"log","timestamp":1675269373901,"level":"debug","message":"(console:log) AAAAAAAAAAAAAAAAAAAAAAA  undefined","meta":{"userLevel":true,"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"5yn9xwy5ay76els","previousOperationId":"ziy9odumy2xeejy"}
{"type":"log","timestamp":1675269374181,"level":"warn","message":"Error when processing render request 29\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 12:9)\n\n  10 |     // console.log(resSessions)\n  11 |\n> 12 |     req.data.authors = { ...req.data,\n     |         ^\n  13 |         ...resSessions.data.map(session=> {\n  14 |           return {\n  15 |             ...author,\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:12:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:22:21)\n    at async Object.beforeRender (sandbox.js:57:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"tkxcbcyw5bj62e6","previousOperationId":"ziy9odumy2xeejy"}
{"type":"log","timestamp":1675269374181,"level":"warn","message":"Rendering request 29 finished with error in 322 ms","meta":{"rootId":"sv0xgjxakcn3i69","id":"sv0xgjxakcn3i69"},"id":"eysqxh0ijmo9u2j","previousOperationId":"ziy9odumy2xeejy"}
{"type":"error","timestamp":1675269374183,"statusCode":400,"weak":true,"lineNumber":12,"decoratedSuffix":"\n\n(sandbox.js line 12:9)\n\n  10 |     // console.log(resSessions)\n  11 |\n> 12 |     req.data.authors = { ...req.data,\n     |         ^\n  13 |         ...resSessions.data.map(session=> {\n  14 |           return {\n  15 |             ...author,\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\nconsole.log('AAAAAAAAAAAAAAAAAAAAAAA ' , req);\n\n    const resSessions = await axios.get('http://localhost:8000/api/authors')\n    // console.log(resSessions)\n\n    req.data.authors = { ...req.data,\n        ...resSessions.data.map(session=> {\n          return {\n            ...author,\n          }\n        })\n    }\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.orders = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"ziy9odumy2xeejy","id":"fd92p6c8cbvq4o8","stack":"TypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:12:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:22:21)\n    at async Object.beforeRender (sandbox.js:57:23)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 12:9)\n\n  10 |     // console.log(resSessions)\n  11 |\n> 12 |     req.data.authors = { ...req.data,\n     |         ^\n  13 |         ...resSessions.data.map(session=> {\n  14 |           return {\n  15 |             ...author,\n\n(sandbox.js line 22:21)\n\n  20 | // group the data for report\n  21 | async function prepareDataSource() {\n> 22 |     const authors = await fetchOrders()\n     |                     ^\n  23 |     return authors;\n  24 |     // console.log(orders);\n  25 |     // const ordersByShipCountry = orders.reduce((a, v) => {\n\n(sandbox.js line 57:23)\n\n  55 | // add jsreport hook which modifies the report input data\n  56 | async function beforeRender(req, res) {\n> 57 |     req.data.orders = await prepareDataSource()\n     |                       ^\n  58 | }\n\n"}
