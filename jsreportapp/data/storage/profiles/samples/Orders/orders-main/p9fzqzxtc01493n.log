{"type":"operationStart","subtype":"profile","data":{"_id":"dm2PFo1VAPMVBUv7","timestamp":"2023-02-03T17:36:25.442Z","state":"queued","mode":"standard","creationDate":"2023-02-03T17:36:25.443Z","modificationDate":"2023-02-03T17:36:25.443Z","shortid":"cvdVvec","$entitySet":"profiles"},"doDiffs":false,"timestamp":1675445785443,"id":"1lkpnjwpwetgn27","previousOperationId":null,"operationId":"356i8qx4eecqtxo"}
{"type":"log","level":"info","message":"Render request 5 queued for execution and waiting for available worker","previousOperationId":"356i8qx4eecqtxo","timestamp":1675445785443,"id":"1prghxt98p1i3g8"}
{"type":"operationStart","subtype":"render","name":"orders-main","previousOperationId":"356i8qx4eecqtxo","timestamp":1675445785454,"id":"u997w54h19q5nyy","previousEventId":"1lkpnjwpwetgn27","operationId":"lf8b1fzxfv40etn"}
{"type":"log","timestamp":1675445785454,"level":"info","message":"Starting rendering request 5","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"iua8sr2t3zjc4ae","previousOperationId":"lf8b1fzxfv40etn"}
{"type":"log","timestamp":1675445785454,"level":"info","message":"Rendering template { name: orders-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"e6yhb9nq3gei0ic","previousOperationId":"lf8b1fzxfv40etn"}
{"type":"log","timestamp":1675445785455,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"mwf2mneefh90frj","previousOperationId":"lf8b1fzxfv40etn"}
{"type":"log","timestamp":1675445785458,"level":"debug","message":"Executing script orders-script (beforeRender)","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"d6sc8cq94d54b3n","previousOperationId":"lf8b1fzxfv40etn"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1675445785493,"id":"zb5rxzz1ya5iuvc","previousEventId":"u997w54h19q5nyy","operationId":"j46xc120vpf0eq9","previousOperationId":"lf8b1fzxfv40etn"}
{"type":"operationStart","subtype":"script","name":"scripts orders-script","previousOperationId":"j46xc120vpf0eq9","timestamp":1675445785493,"id":"5h12v1v99uv19ha","previousEventId":"zb5rxzz1ya5iuvc","operationId":"l10f4lky2fa0wm0"}
{"type":"log","timestamp":1675445785753,"level":"warn","message":"Error when processing render request 5\n(because) error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 9:10)\n\n   7 |\n   8 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n>  9 |      req.data.authors = { ...req.data,\n     |          ^\n  10 |         ...resAuthors\n  11 |     }\n  12 |\n\n(sandbox.js line 17:21)\n\n  15 | // group the data for report\n  16 | async function prepareDataSource() {\n> 17 |     const authors = await fetchOrders()\n     |                     ^\n  18 |     console.log(authors);\n  19 |     return authors;\n  20 |     // console.log(orders);\n\n(sandbox.js line 53:24)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.authors = await prepareDataSource()\n     |                        ^\n  54 | }\n\n\nTypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:9:10)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:17:21)\n    at async Object.beforeRender (sandbox.js:53:24)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"rnhcyzwzrv800td","previousOperationId":"l10f4lky2fa0wm0"}
{"type":"log","timestamp":1675445785753,"level":"warn","message":"Rendering request 5 finished with error in 311 ms","meta":{"rootId":"p9fzqzxtc01493n","id":"p9fzqzxtc01493n"},"id":"4x27jnchywm2dga","previousOperationId":"l10f4lky2fa0wm0"}
{"type":"error","timestamp":1675445785757,"statusCode":400,"weak":true,"lineNumber":9,"decoratedSuffix":"\n\n(sandbox.js line 9:10)\n\n   7 |\n   8 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n>  9 |      req.data.authors = { ...req.data,\n     |          ^\n  10 |         ...resAuthors\n  11 |     }\n  12 |\n\n(sandbox.js line 17:21)\n\n  15 | // group the data for report\n  16 | async function prepareDataSource() {\n> 17 |     const authors = await fetchOrders()\n     |                     ^\n  18 |     console.log(authors);\n  19 |     return authors;\n  20 |     // console.log(orders);\n\n(sandbox.js line 53:24)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.authors = await prepareDataSource()\n     |                        ^\n  54 | }\n\n","entity":{"shortid":"BJX1Jw82ce","name":"orders-script","content":"// server side script fetching remote data and preparing report data source\nconst http = require('http');\nconst axios = require('axios');\n// call remote http rest api\nasync function fetchOrders(req, res) {\n\n\n    const resAuthors = await axios.get('http://localhost:8000/api/authors')\n     req.data.authors = { ...req.data,\n        ...resAuthors\n    }\n\n    return req.data.authors;\n}\n// group the data for report\nasync function prepareDataSource() {\n    const authors = await fetchOrders()\n    console.log(authors);\n    return authors;\n    // console.log(orders);\n    // const ordersByShipCountry = orders.reduce((a, v) => {\n    //     a[v.name] = a[v.name] || []\n    //     a[v.name].push(v)\n    //     return a\n    // }, {})\n\n    // return Object.keys(ordersByShipCountry).map((country) => {\n    //     const ordersInCountry = ordersByShipCountry[country]\n\n    //     const accumulated = {}\n\n    //     ordersInCountry.forEach((o) => {\n    //         o.OrderDate = new Date(o.OrderDate);\n    //         const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n    //         accumulated[key] = accumulated[key] || {\n    //             value: 0,\n    //             orderDate: o.OrderDate\n    //         };\n    //         accumulated[key].value++;\n    //     });\n\n    //     return {\n    //         rows: ordersInCountry,\n    //         country,\n    //         accumulated\n    //     }\n\n    // })\n}\n\n// add jsreport hook which modifies the report input data\nasync function beforeRender(req, res) {\n    req.data.authors = await prepareDataSource()\n}"},"property":"content","logged":true,"previousOperationId":"l10f4lky2fa0wm0","id":"j1909cnfrazg1wv","stack":"TypeError: Cannot read properties of undefined (reading 'data')\n    at fetchOrders (sandbox.js:9:10)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async prepareDataSource (sandbox.js:17:21)\n    at async Object.beforeRender (sandbox.js:53:24)\n    at async executionFn (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:67:11)\n    at async run (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\createSandbox.js:184:24)\n    at async WorkerReporter._runInSandbox (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-core\\lib\\worker\\sandbox\\runInSandbox.js:180:14)\n    at async executeScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\executeScript.js:122:12)\n    at async Scripts._runScript (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:140:30)\n    at async Scripts.handleBeforeRender (D:\\Clase\\Segundo\\Proyecto\\OFGCAPP\\jsreportapp\\node_modules\\@jsreport\\jsreport-scripts\\lib\\worker.js:64:7)","message":"Error when evaluating custom script /samples/Orders/orders-script\nCannot read properties of undefined (reading 'data')\n\n(sandbox.js line 9:10)\n\n   7 |\n   8 |     const resAuthors = await axios.get('http://localhost:8000/api/authors')\n>  9 |      req.data.authors = { ...req.data,\n     |          ^\n  10 |         ...resAuthors\n  11 |     }\n  12 |\n\n(sandbox.js line 17:21)\n\n  15 | // group the data for report\n  16 | async function prepareDataSource() {\n> 17 |     const authors = await fetchOrders()\n     |                     ^\n  18 |     console.log(authors);\n  19 |     return authors;\n  20 |     // console.log(orders);\n\n(sandbox.js line 53:24)\n\n  51 | // add jsreport hook which modifies the report input data\n  52 | async function beforeRender(req, res) {\n> 53 |     req.data.authors = await prepareDataSource()\n     |                        ^\n  54 | }\n\n"}
